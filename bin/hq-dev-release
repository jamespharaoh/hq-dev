#!/usr/bin/env ruby

require "fileutils"

project = File.basename(Dir.pwd)
ver = ARGV[0]
offline = ARGV[1] == "--offline"

def announce message
	puts ""
	puts message
end

def shell cmd
	success = system cmd
	exit 1 unless success
end

# TODO check the workspace is clean

# TODO run bundle update and commit any changes

announce "running tests"

shell "bundle exec rake"

announce "bumping version number"

shell "echo #{ver} > etc/hq-dev/version"

if File.exist? "data/gem-versions"
	File.open "data/gem-versions.new", "w" do
		|file_io|
		File.new("data/gem-versions").each do
			|line|
			line_name, line_ver = line.strip.split " "
			if line_name == "hq-dev"
				file_io.write "#{line_name} #{ver}\n"
			else
				file_io.write "#{line_name} #{line_ver}\n"
			end
		end
	end
	FileUtils.mv "data/gem-versions.new", "data/gem-versions"
end

announce "running bundle update"

shell "bundle update" unless offline
shell "bundle update --local" if offline

announce "committing changes"

shell "git add -A"
shell "git diff --cached"

sleep 2

shell "git commit -m 'bump version number to #{ver}'"

announce "pushing to github" unless offline
announce "commit to local git" if offline

shell "git tag #{ver}"
shell "git push origin master #{ver}" unless offline

announce "pushing to rubygems" unless offline
announce "building gem" if offline

shell "gem build #{project}.gemspec"
shell "gem push #{project}-#{ver}.gem" unless offline

announce "installing gem"

shell "gem install #{project}-#{ver}.gem"

if offline
	puts ""
	puts "recording offline release"
	system "echo offline release #{project} #{ver} | mail james@phsys.co.uk"
end

puts ""
puts "done!"
puts ""
